// <auto-generated />
using System;
using CleanArchitectureSampleProject.Infrastructure.Repository.Authentication.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CleanArchitectureSampleProject.Infrastructure.Repository.Authentication.Migrations
{
    [DbContext(typeof(AuthenticationDataContext))]
    partial class AuthenticationDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CleanArchitectureSampleProject.Infrastructure.Repository.Authentication.Entities.Resources.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 12, 1, 0, 44, 22, 958, DateTimeKind.Utc).AddTicks(7509));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("CleanArchitectureSampleProject.Infrastructure.Repository.Authentication.Entities.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 12, 1, 0, 44, 22, 958, DateTimeKind.Utc).AddTicks(5710));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CleanArchitectureSampleProject.Infrastructure.Repository.Authentication.Entities.UsersResources.UserResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanDelete")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanRead")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanWrite")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 12, 1, 0, 44, 22, 958, DateTimeKind.Utc).AddTicks(8991));

                    b.Property<int>("ResourceId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.HasIndex("UserId", "ResourceId")
                        .IsUnique();

                    b.ToTable("UsersResources");
                });

            modelBuilder.Entity("CleanArchitectureSampleProject.Infrastructure.Repository.Authentication.Entities.UsersResources.UserResource", b =>
                {
                    b.HasOne("CleanArchitectureSampleProject.Infrastructure.Repository.Authentication.Entities.Resources.Resource", "Resource")
                        .WithMany("UserResources")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CleanArchitectureSampleProject.Infrastructure.Repository.Authentication.Entities.Users.User", "User")
                        .WithMany("UserResources")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resource");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CleanArchitectureSampleProject.Infrastructure.Repository.Authentication.Entities.Resources.Resource", b =>
                {
                    b.Navigation("UserResources");
                });

            modelBuilder.Entity("CleanArchitectureSampleProject.Infrastructure.Repository.Authentication.Entities.Users.User", b =>
                {
                    b.Navigation("UserResources");
                });
#pragma warning restore 612, 618
        }
    }
}
